/*
 *
 *  MIT License
 *
 *  (C) Copyright 2022 Hewlett Packard Enterprise Development LP
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 *  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 *  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 *  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *  OTHER DEALINGS IN THE SOFTWARE.
 *
 */
@Library('csm-shared-library') _

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        OPERATOR_NAME = "postgres-operator"
        OPERATOR_UI_NAME = "postgres-operator-ui"
        OPERATOR_DESCRIPTION = "Forked Postgres Operator"
        OPERATOR_UI_DESCRIPTION = "Forked Postgres Operator UI"
        DESCRIPTION = "Forked Postgres Operator"
        IS_STABLE = getBuildIsStable()
        VERSION = getDockerBuildVersion(isStable: env.IS_STABLE)
        DOCKER_ARGS = getDockerBuildArgs(name: env.OPERATOR_NAME, description: env.DESCRIPTION)
    }

    stages {
        stage("Build postgres-operator") {
            steps {
                sh "BINARY=postgres-operator ./buildPrep.sh"
            }
        }

        stage("Build postgres-operator-ui") {
            steps {
                sh "BINARY=postgres-operator-ui ./buildPrep.sh"
            }
        }

        stage("Publish postgres-operator docker image") {
            steps {
                script {
                    publishCsmDockerImage(image: env.OPERATOR_NAME, tag: env.VERSION, isStable: env.IS_STABLE, snykTargetFile: "docker/Dockerfile")
                }
            }
        }

        stage("Publish postgres-operator-ui docker image") {
            steps {
                script {
                    publishCsmDockerImage(image: env.OPERATOR_UI_NAME, tag: env.VERSION, isStable: env.IS_STABLE, snykTargetFile: "ui/Dockerfile")
                }
            }
        }
    }
}
